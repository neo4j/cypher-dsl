package org.neo4j.cypherdsl.codegen.ogm.models.ids;

import java.util.List;
import javax.annotation.Generated;
import org.neo4j.cypherdsl.core.MapExpression;
import org.neo4j.cypherdsl.core.NodeBase;
import org.neo4j.cypherdsl.core.NodeLabel;
import org.neo4j.cypherdsl.core.Properties;
import org.neo4j.cypherdsl.core.Property;
import org.neo4j.cypherdsl.core.SymbolicName;

@Generated(
	value = "org.neo4j.cypherdsl.codegen.core.NodeImplBuilder",
	date = "2025-09-21T21:21:00+01:00",
	comments = "This class is generated by the Neo4j Cypher-DSL. All changes to it will be lost after regeneration."
)
public final class ExternalGeneratedIdImplicit_ extends NodeBase<ExternalGeneratedIdImplicit_> {
	public static final String $PRIMARY_LABEL = "ExternalGeneratedIdImplicit";

	public static final ExternalGeneratedIdImplicit_ EXTERNAL_GENERATED_ID_IMPLICIT = new ExternalGeneratedIdImplicit_();

	public final Property ID = this.property("id");

	public ExternalGeneratedIdImplicit_() {
		super($PRIMARY_LABEL);
	}

	private ExternalGeneratedIdImplicit_(SymbolicName symbolicName, List<NodeLabel> labels,
		Properties properties) {
		super(symbolicName, labels, properties);
	}

	@Override
	public ExternalGeneratedIdImplicit_ named(SymbolicName newSymbolicName) {
		return new ExternalGeneratedIdImplicit_(newSymbolicName, getLabels(), getProperties());
	}

	@Override
	public ExternalGeneratedIdImplicit_ withProperties(MapExpression newProperties) {
		return new ExternalGeneratedIdImplicit_(getSymbolicName().orElse(null), getLabels(), Properties.create(newProperties));
	}
}
