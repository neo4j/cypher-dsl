package org.neo4j.cypherdsl.codegen.sdn6.models.same_rel_different_package.domain;

import java.util.List;
import javax.annotation.processing.Generated;
import org.neo4j.cypherdsl.core.MapExpression;
import org.neo4j.cypherdsl.core.NodeBase;
import org.neo4j.cypherdsl.core.NodeLabel;
import org.neo4j.cypherdsl.core.Properties;
import org.neo4j.cypherdsl.core.SymbolicName;

@Generated(
	value = "org.neo4j.cypherdsl.codegen.core.NodeImplBuilder",
	date = "2019-09-21T21:21:00+01:00",
	comments = "This class is generated by the Neo4j Cypher-DSL. All changes to it will be lost after regeneration."
)
public final class Company_ extends NodeBase<Company_> {
	public static final String $PRIMARY_LABEL = "Company";

	public static final Company_ COMPANY = new Company_();

	public final In_ PLACE = new In_(this, Place_.PLACE);

	public final Abuses_<DomainEntity_> DE_1 = new Abuses_<DomainEntity_>(this, DomainEntity_.DOMAIN_ENTITY);

	public final Abuses_<DomainEntity2_> DE_2 = new Abuses_<DomainEntity2_>(this, DomainEntity2_.DOMAIN_ENTITY_2);

	public final Uses_ DOMAIN_ENTITY = new Uses_(this, DomainEntity_.DOMAIN_ENTITY);

	public final Uses_ DOMAIN_ENTITY_2 = new Uses_(this, DomainEntity_.DOMAIN_ENTITY);

	public Company_() {
		super($PRIMARY_LABEL, "CompanyId");
	}

	private Company_(SymbolicName symbolicName, List<NodeLabel> labels, Properties properties) {
		super(symbolicName, labels, properties);
	}

	@Override
	public Company_ named(SymbolicName newSymbolicName) {
		return new Company_(newSymbolicName, getLabels(), getProperties());
	}

	@Override
	public Company_ withProperties(MapExpression newProperties) {
		return new Company_(getSymbolicName().orElse(null), getLabels(), Properties.create(newProperties));
	}
}
